{"mappings":"ACCA,MAAM,EAAU,EAAE,aACZ,EAAQ,EAAU,KAAK,WACvB,EAAE,aAAa,QAAQ,KACvB,EAAQ,KAAK,MAAM,GACnB,EAAQ,GAAS,CACnB,CAAC,KAAK,IAAI,IAAI,0BAA0B,EACxC,CAAC,KAAK,IAAI,IAAI,0BAA0B,EAC3C,CAEK,EAAY,AAAC,GACR,EAAI,QAAQ,WAAW,IACjB,QAAQ,WACR,QAAQ,OAAO,IACf,QAAQ,OAAO,IAI1B,EAAO,KACT,EAAU,KAAK,iBAAkC,SACjD,EAAQ,QAAQ,CAAC,EAAK,KAClB,IAAM,EAAI,EAAE,CAAC;;kCAEa,EAAE,EAAK,KAAK;kCACZ,EAAE,EAAY,EAAK,KAAK;;;;;;;;SAQjD,CAAC,EAAE,aAAa,GACrB,EAAI,GAAG,QAAQ,KACX,OAAO,KAAK,EAAK,IACrB,GAEA,EAAI,GAAG,QAAQ,SAAS,AAAC,IACrB,EAAE,kBACF,EAAQ,OAAO,EAAM,GACrB,GACJ,EACA,EACJ,EACA,IAEA,EAAE,cAAc,GAAG,QAAQ,KACxB,IAAI,EAAK,OAAO,OAAO,gBACC,CAAA,GAArB,EAAI,QAAQ,SACV,CAAA,EAAI,WAAW,CADpB,EAGA,EAAQ,KAAK,CACI,KAAK,EAAY,EAAI,CAAC,EAAE,CAAC,cACzB,IAAI,CACR,GAEd,GACF,GAEA,OAAO,eAAe,KAClB,QAAQ,IAAI,UACZ,IAAM,EAAQ,KAAK,UAAU,GAC7B,QAAQ,IAAI,GACZ,QAAQ,IAAI,GAEZ,OAAO,aAAa,QAAQ,IAAI,EAGpC,EAEA,EAAE,UAAU,GAAG,WAAW,AAAC,IAEvB,GAAM,CAAC,IAAA,CAAG,CAAC,CAAC,EACZ,IAAI,IAAI,EAAG,EAAE,EAAE,EAAQ,OAAO,IACvB,CAAO,CAAC,EAAE,CAAC,KAAK,gBAAgB,GAC/B,OAAO,KAAK,CAAO,CAAC,EAAE,CAAC,IAGnC","sources":["<anon>","src/main.js"],"sourcesContent":["const $siteList = $(\".siteList\");\nconst $lastLi = $siteList.find(\"li.last\");\nconst x = localStorage.getItem(\"x\"); /* x现在是个字符串*/ \nconst xObject = JSON.parse(x);\n/*JSON.parse把字符串变对象*/ const hashMap = xObject || [\n    {\n        logo: \"G\",\n        url: \"https://gitee.com/gitte/\"\n    },\n    {\n        logo: \"B\",\n        url: \"https://www.bilibili.com\"\n    }\n];\nconst simplifyUrl = (url)=>{\n    return url.replace(\"https://\", \"\").replace(\"http://\").replace(\"www.\", \"\").replace(/\\/.*/, \"\") //正则表达式，删除 以 / 开头的内容\n    ;\n} /*简化url*/ ;\nconst render = ()=>{\n    $siteList.find(\"li:not(.last)\")/*唯独不找last这个li */ .remove(); /*删除之前的hash再渲染 */ \n    hashMap.forEach((node, index)=>{\n        const $li = $(`<li>\r\n                <div class=\"site\">\r\n                <div class=\"logo\">${node.logo}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-close\">\r\n                        </use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n    </li>`).insertBefore($lastLi);\n        $li.on(\"click\", ()=>{\n            window.open(node.url);\n        });\n        /*代替a标签 */ $li.on(\"click\", \".close\", (e)=>{\n            e.stopPropagation(); //用a标签时，可以阻止冒泡，不让点击叉叉然后是跳转网页\n            hashMap.splice(index, 1); /*根据索引删除对应网址 */ \n            render(); /*删除了再重新渲染 */ \n        });\n    /*阻止冒泡，点击叉叉不会跳转 */ });\n};\nrender();\n$(\".addButton\").on(\"click\", ()=>{\n    let url = window.prompt(\"\\u8BF7\\u95EE\\u4F60\\u8981\\u6DFB\\u52A0\\u7684\\u7F51\\u5740\\u662F\\u4EC0\\u4E48\\uFF1F\");\n    if (url.indexOf(\"http\") != 0) url = \"https://\" + url;\n    hashMap.push({\n        logo: simplifyUrl(url)[0].toUpperCase(),\n        url: url\n    });\n    render();\n});\nwindow.onbeforeunload = ()=>{\n    console.log(\"\\u9875\\u9762\\u8981\\u5173\\u95ED\\u4E86\");\n    const string = JSON.stringify(hashMap);\n    console.log(hashMap);\n    console.log(string);\n    // /*localStorage只能存字符串，可以用JSON.stringify把对象变字符串 */\n    window.localStorage.setItem(\"x\", string);\n// /*window可省略*/\n/*在本地存储里面设置一个x，x的值为string内容 */ } /*监听用户关闭*/ ;\n$(document).on(\"keypress\", (e)=>{\n    // const key =e.key;,上下是等同的\n    const { key } = e;\n    for(let i = 0; i < hashMap.length; i++)if (hashMap[i].logo.toLowerCase() === key) window.open(hashMap[i].url);\n});\n\n//# sourceMappingURL=index.af84a5aa.js.map\n","\r\nconst $siteList=$('.siteList')\r\nconst $lastLi=$siteList.find('li.last')\r\nconst x=localStorage.getItem('x');/* x现在是个字符串*/\r\nconst xObject=JSON.parse(x)/*JSON.parse把字符串变对象*/\r\nconst hashMap=xObject||[\r\n    {logo:'G',url:'https://gitee.com/gitte/'},\r\n    {logo:'B',url:'https://www.bilibili.com'}\r\n]\r\n\r\nconst simplifyUrl=(url)=>{\r\n    return url.replace('https://','')\r\n                .replace('http://')\r\n                .replace('www.','')\r\n                .replace(/\\/.*/,'')//正则表达式，删除 以 / 开头的内容\r\n\r\n}/*简化url*/\r\n\r\nconst render=()=>{\r\n    $siteList.find('li:not(.last)')/*唯独不找last这个li */.remove();/*删除之前的hash再渲染 */\r\n    hashMap.forEach((node,index)=>{\r\n        const $li=$(`<li>\r\n                <div class=\"site\">\r\n                <div class=\"logo\">${node.logo}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-close\">\r\n                        </use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n    </li>`).insertBefore($lastLi)\r\n    $li.on('click',()=>{\r\n        window.open(node.url);\r\n    })/*代替a标签 */\r\n\r\n    $li.on('click','.close',(e)=>{\r\n        e.stopPropagation();//用a标签时，可以阻止冒泡，不让点击叉叉然后是跳转网页\r\n        hashMap.splice(index,1);/*根据索引删除对应网址 */\r\n        render();/*删除了再重新渲染 */\r\n    })/*阻止冒泡，点击叉叉不会跳转 */\r\n    })\r\n}\r\nrender();\r\n\r\n$('.addButton').on('click',()=>{\r\n   let url= window.prompt('请问你要添加的网址是什么？');\r\n   if(url.indexOf('http')!=0){\r\n        url='https://'+url;\r\n   }\r\n   hashMap.push({\r\n                    logo:simplifyUrl(url)[0].toUpperCase(),//toUpperCase()变大写\r\n                    url:url\r\n                }\r\n    )\r\n  render();\r\n})\r\n\r\nwindow.onbeforeunload=()=>{\r\n    console.log('页面要关闭了');\r\n    const string =JSON.stringify(hashMap);\r\n    console.log(hashMap);\r\n    console.log(string);\r\n    // /*localStorage只能存字符串，可以用JSON.stringify把对象变字符串 */\r\n    window.localStorage.setItem('x',string);\r\n    // /*window可省略*/\r\n    /*在本地存储里面设置一个x，x的值为string内容 */\r\n}/*监听用户关闭*/\r\n\r\n$(document).on('keypress',(e)=>{\r\n    // const key =e.key;,上下是等同的\r\n    const {key}=e;\r\n    for(let i =0;i<hashMap.length;i++){\r\n        if(hashMap[i].logo.toLowerCase()===key){/*toLowerCase()变小写*/\r\n            window.open(hashMap[i].url);\r\n        }\r\n    }\r\n})"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","console","log","string","stringify","setItem","document","key","i","length","toLowerCase"],"version":3,"file":"index.af84a5aa.js.map"}